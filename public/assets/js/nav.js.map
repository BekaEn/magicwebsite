{
  "version": 3,
  "sources": ["../../../src/assets/js/nav.js"],
  "sourcesContent": ["// add classes for mobile navigation toggling\nvar CSbody = document.querySelector(\"body\");\nconst CSnavbarMenu = document.querySelector(\"#cs-navigation\");\nconst CShamburgerMenu = document.querySelector(\"#cs-navigation .cs-toggle\");\n\nCShamburgerMenu.addEventListener('click', function() {\n    CShamburgerMenu.classList.toggle(\"cs-active\");\n    CSnavbarMenu.classList.toggle(\"cs-active\");\n    CSbody.classList.toggle(\"cs-open\");\n    // run the function to check the aria-expanded value\n    ariaExpanded();\n});\n\n// checks the value of aria expanded on the cs-ul and changes it accordingly whether it is expanded or not \nfunction ariaExpanded() {\n    const csUL = document.querySelector('#cs-expanded');\n    const csExpanded = csUL.getAttribute('aria-expanded');\n\n    if (csExpanded === 'false') {\n        csUL.setAttribute('aria-expanded', 'true');\n    } else {\n        csUL.setAttribute('aria-expanded', 'false');\n    }\n}\n\n// mobile nav toggle code\nconst dropDowns = Array.from(document.querySelectorAll('#cs-navigation .cs-dropdown'));\n    for (const item of dropDowns) {\n        const onClick = () => {\n        item.classList.toggle('cs-active')\n    }\n    item.addEventListener('click', onClick)\n    }\n\n\n// Highlight the active menu item based on the current URL\ndocument.addEventListener('DOMContentLoaded', (event) => {\n    const currentPath = window.location.pathname;\n    const menuItems = document.querySelectorAll('#cs-navigation .cs-li-link');\n\n    menuItems.forEach(item => {\n        const href = item.getAttribute('href');\n\n        // Check if the currentPath matches the href, considering trailing slashes\n        if (currentPath === href || currentPath === href + '/') {\n            item.classList.add('cs-active');\n\n            // If it's a dropdown link, add the active class to the parent span\n            const parentDropdown = item.closest('.cs-dropdown');\n            if (parentDropdown) {\n                const parentLink = parentDropdown.querySelector('span.cs-li-link');\n                parentLink.classList.add('cs-active');\n            }\n        }\n    });\n\n    // check dropdown links\n    const dropLinks = document.querySelectorAll('#cs-navigation .cs-drop-link');\n    dropLinks.forEach(item => {\n        const href = item.getAttribute('href');\n\n        if (currentPath === href || currentPath === href + '/') {\n            item.classList.add('cs-active');\n            const parentDropdown = item.closest('.cs-dropdown');\n            if (parentDropdown) {\n                const parentLink = parentDropdown.querySelector('span.cs-li-link');\n                parentLink.classList.add('cs-active');\n            }\n        }\n    });\n});\n                            "],
  "mappings": ";;AACA,MAAI,SAAS,SAAS,cAAc,MAAM;AAC1C,MAAM,eAAe,SAAS,cAAc,gBAAgB;AAC5D,MAAM,kBAAkB,SAAS,cAAc,2BAA2B;AAE1E,kBAAgB,iBAAiB,SAAS,WAAW;AACjD,oBAAgB,UAAU,OAAO,WAAW;AAC5C,iBAAa,UAAU,OAAO,WAAW;AACzC,WAAO,UAAU,OAAO,SAAS;AAEjC,iBAAa;AAAA,EACjB,CAAC;AAGD,WAAS,eAAe;AACpB,UAAM,OAAO,SAAS,cAAc,cAAc;AAClD,UAAM,aAAa,KAAK,aAAa,eAAe;AAEpD,QAAI,eAAe,SAAS;AACxB,WAAK,aAAa,iBAAiB,MAAM;AAAA,IAC7C,OAAO;AACH,WAAK,aAAa,iBAAiB,OAAO;AAAA,IAC9C;AAAA,EACJ;AAGA,MAAM,YAAY,MAAM,KAAK,SAAS,iBAAiB,6BAA6B,CAAC;AACjF,aAAW,QAAQ,WAAW;AAC1B,UAAM,UAAU,MAAM;AACtB,WAAK,UAAU,OAAO,WAAW;AAAA,IACrC;AACA,SAAK,iBAAiB,SAAS,OAAO;AAAA,EACtC;AAIJ,WAAS,iBAAiB,oBAAoB,CAAC,UAAU;AACrD,UAAM,cAAc,OAAO,SAAS;AACpC,UAAM,YAAY,SAAS,iBAAiB,4BAA4B;AAExE,cAAU,QAAQ,UAAQ;AACtB,YAAM,OAAO,KAAK,aAAa,MAAM;AAGrC,UAAI,gBAAgB,QAAQ,gBAAgB,OAAO,KAAK;AACpD,aAAK,UAAU,IAAI,WAAW;AAG9B,cAAM,iBAAiB,KAAK,QAAQ,cAAc;AAClD,YAAI,gBAAgB;AAChB,gBAAM,aAAa,eAAe,cAAc,iBAAiB;AACjE,qBAAW,UAAU,IAAI,WAAW;AAAA,QACxC;AAAA,MACJ;AAAA,IACJ,CAAC;AAGD,UAAM,YAAY,SAAS,iBAAiB,8BAA8B;AAC1E,cAAU,QAAQ,UAAQ;AACtB,YAAM,OAAO,KAAK,aAAa,MAAM;AAErC,UAAI,gBAAgB,QAAQ,gBAAgB,OAAO,KAAK;AACpD,aAAK,UAAU,IAAI,WAAW;AAC9B,cAAM,iBAAiB,KAAK,QAAQ,cAAc;AAClD,YAAI,gBAAgB;AAChB,gBAAM,aAAa,eAAe,cAAc,iBAAiB;AACjE,qBAAW,UAAU,IAAI,WAAW;AAAA,QACxC;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL,CAAC;",
  "names": []
}
